//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <fstream>
#include <algorithm>
#include <iterator>
#include <chrono>

void save(std::string);

int main()
{
	save("소스.cpp");
}

void save(std::string fname)
{

	//fname을 읽기모드로 연다
	std::ifstream in(fname);
	if (!in) {
		std::cout << "뭔가가 잘못됨" << std::endl;
	}

	//하드디스크에 저장할 파일을 덧붙여 쓰기
	std::ofstream out("2019 STL 화56 금23 강의저장.txt", std::ios::app);

	//읽은 모든 내용을 쓰기파일에 쓴다
	//copy(어디부터, 어디까지, 어디로);
	copy(std::istreambuf_iterator<char>(in), std::istreambuf_iterator<char>(), std::ostreambuf_iterator<char>(out));

	//저장한 시간도 기록한다
	//1970이후의 틱수를 얻어온다
	auto tick = std::chrono::system_clock::now();
	//time형식으로 변환한다
	auto time = std::chrono::system_clock::to_time_t(tick);
	//글자로 바꾼다
	std::string date(ctime(&time));

	out << std::endl << std::endl;
	out << "=========================" << std::endl;
	out << " " << date;
	out << "=========================" << std::endl;
	out << std::endl;
}

=========================
 Fri Mar  8 11:04:34 2019
=========================

//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("소스.cpp");
}

=========================
 Fri Mar  8 11:07:34 2019
=========================

//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("소스.cpp");
}
=========================
 Fri Mar  8 11:10:57 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include "save.h"

int main()
{
	save("소스.cpp");
}
=========================
 Fri Mar  8 11:18:41 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

int main()
{
	//정수 10개를 정렬해보자
	int a[] {1, 3, 5, 7, 9, 2, 4, 6, 8, 10};

	//sort(어디부터, 어디까지);
	std::sort(std::begin(a), std::end(a));

	for (int i = 0; i < 10; ++i)
	{
		std::cout << a[i];
	}

	save("소스.cpp");
}
=========================
 Fri Mar  8 11:43:07 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

int main()
{
	//정수 10개를 정렬해보자
	int a[] {1, 3, 5, 7, 9, 2, 4, 6, 8, 10};

	//sort(어디부터, 어디까지);
	std::sort(std::begin(a), std::end(a));

	for (int d : a)
		std::cout << d;

	save("소스.cpp");
}
=========================
 Fri Mar  8 11:43:53 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

int main()
{
	//정수 10개를 정렬해보자
	int a[] {1, 3, 5, 7, 9, 2, 4, 6, 8, 10};

	//sort(어디부터, 어디까지);
	std::sort(std::begin(a), std::end(a));

	for (int d : a)
		std::cout << d<<" ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 11:44:33 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

bool how(int, int);

bool how(int a, int b)
{
	return a > b;
}

int main()
{
	//정수 10개를 정렬해보자
	int a[] {1, 3, 5, 7, 9, 2, 4, 6, 8, 10};

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a),how);

	for (int d : a)
		std::cout << d << " ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 11:56:04 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-강의 내용을 저장하자
// 저장하는 함수를 만들고 file을 분리하자
//
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"

int main()
{
	//정수 10개를 정렬해보자
	int a[] {1, 3, 5, 7, 9, 2, 4, 6, 8, 10};

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a), [](int a, int b) {
		return a > b;
	});

	for (int d : a)
		std::cout << d << " ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 11:58:03 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

int main()
{
	//정수 1000개를 정렬해보자
	int a[1000];

	std::uniform_int_distribution<> uid;
	std::default_random_engine dre;

	for (int i = 0; i < 1000; ++i)
	{
		a[i] = uid(dre);
	}

	//for (int i = 0; i < 1000; ++i)
	//	a[i] = 분포(엔진);

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a), [](int a, int b) {
		return a > b;
	});

	for (int d : a)
		std::cout << d << " ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 12:08:52 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

int main()
{
	//정수 1000개를 정렬해보자
	int a[1000];

	std::uniform_int_distribution<> uid(0,10000);
	std::default_random_engine dre;

	for (int i = 0; i < 1000; ++i)
	{
		a[i] = uid(dre);
	}

	//for (int i = 0; i < 1000; ++i)
	//	a[i] = 분포(엔진);

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a), [](int a, int b) {
		return a > b;
	});

	for (int d : a)
		std::cout << d << " ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 12:09:31 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

int main()
{
	//정수 1000개를 정렬해보자
	int a[1000];

	std::uniform_int_distribution<> uid(0,10000);
	std::default_random_engine dre;

	for (int i = 0; i < 1000; ++i)
	{
		a[i] = uid(dre);
	}

	//for (int i = 0; i < 1000; ++i)
	//	a[i] = 분포(엔진);

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a));

	for (int d : a)
		std::cout << d << " ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 12:10:01 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/8 stl 금23														(화금 1주 2일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

int main()
{
	//정수 100000개를 정렬해보자
	int a[100000];

	std::uniform_int_distribution<> uid(0,10000);
	std::default_random_engine dre;

	for (int& d : a)
		d = uid(dre);

	//for (int i = 0; i < 1000; ++i)
	//	a[i] = 분포(엔진);

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a));

	for (int d : a)
		std::cout << d << " ";

	save("소스.cpp");
}
=========================
 Fri Mar  8 12:15:47 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int a[1000'0000];

int main()
{
	//정수 10000000개를 정렬해보자


	std::uniform_int_distribution<> uid(0,10000);
	std::default_random_engine dre;

	for (int& d : a)
		d = uid(dre);

	//for (int i = 0; i < 1000; ++i)
	//	a[i] = 분포(엔진);

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a));

	for (int i=0;i<1000;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:50:20 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int a[1000'0000];

int main()
{
	//정수 10000000개를 정렬해보자


	std::uniform_int_distribution<> uid;
	std::default_random_engine dre;

	for (int& d : a)
		d = uid(dre);

	//for (int i = 0; i < 1000; ++i)
	//	a[i] = 분포(엔진);

	//sort(어디부터 &a[0], 어디까지 &a[10], 어떻게(함수의 시작번지));
	std::sort(std::begin(a), std::end(a));

	for (int i=0;i<1000;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:51:27 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int main()
{
	//정수 10000000개를 정렬해보자
	int* a;

	std::cout << "원하는만큼 정수를 동적할당하여 정렬후 앞에서 100개를 출력" << std::endl;
	std::cout << "1000 이상의 정수를 입력하세요:";
	int num;
	std::cin >> num;
	a = new int[num];

	std::uniform_int_distribution<> uid;
	std::default_random_engine dre;

	for (int i=0;i<num;++i)
		a[i]= uid(dre);


	std::sort(a, a + num);

	for (int i=0;i<1000;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:56:39 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int main()
{
	//정수 10000000개를 정렬해보자
	int* a;

	std::cout << "원하는만큼 정수를 동적할당하여 정렬후 앞에서 100개를 출력" << std::endl;
	std::cout << "1000 이상의 정수를 입력하세요:";
	int num;
	std::cin >> num;
	a = new int[num];

	std::uniform_int_distribution<> uid(0,10000);
	std::default_random_engine dre;

	for (int i=0;i<num;++i)
		a[i]= uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << a[i] << " ";

	std::cout << std::endl << std::endl;

	std::sort(a, a + num);

	for (int i=0;i<100;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:57:47 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int main()
{
	//정수 10000000개를 정렬해보자
	int* a;

	std::cout << "원하는만큼 정수를 동적할당하여 정렬후 앞에서 100개를 출력" << std::endl;
	std::cout << "1000 이상의 정수를 입력하세요:";
	int num;
	std::cin >> num;
	a = new int[num];

	std::cout << std::endl;

	std::uniform_int_distribution<> uid(0,100000);
	std::default_random_engine dre;

	for (int i=0;i<num;++i)
		a[i]= uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << a[i] << " ";

	std::cout << std::endl << std::endl;

	std::sort(a, a + num);

	for (int i=0;i<100;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:58:27 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int main()
{
	//정수 10000000개를 정렬해보자
	int* a;

	std::cout << "원하는만큼 정수를 동적할당하여 정렬후 앞에서 100개를 출력" << std::endl;
	std::cout << "1000 이상의 정수를 입력하세요:";
	int num;
	std::cin >> num;
	a = new int[num];

	std::cout << std::endl;

	std::uniform_int_distribution<> uid(0,100000);
	std::default_random_engine dre;

	for (int i=0;i<num;++i)
		a[i]= uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << a[i] << " ";

	std::cout << std::endl << std::endl;

	std::sort(a, a + num);

	for (int i=0;i<100;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:59:13 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int main()
{
	//정수 10000000개를 정렬해보자
	int* a;

	std::cout << "원하는만큼 정수를 동적할당하여 정렬후 앞에서 100개를 출력" << std::endl;
	std::cout << "1000 이상의 정수를 입력하세요:";
	int num;
	std::cin >> num;
	a = new int[num];

	std::cout << std::endl;

	std::uniform_int_distribution<> uid(0,100000);
	std::default_random_engine dre;

	for (int i=0;i<num;++i)
		a[i]= uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << a[i] << " ";

	std::cout << std::endl << std::endl;

	std::sort(a, a + num);

	for (int i=0;i<100;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:59:28 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
//-많은 수의 자료를 다루는 것을 생각해보자
// 많은수를 어떻게 다루는가?
// 자료는 어디에 있는가?
// -정수 1000만개를 랜점하게 생성한다
// -정렬하여 파일에 기록한다
// -binary I/O
//-책은 다음주부터
//------------------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <random>
#include "save.h"

//a는 전역변수이다 - 어디에(실행파일의 어디에?) 저장되나?
//지역변수와의 차이점은 무엇인가?
//a는 실행파일에서 어떻게 기록되는가?
//int a[1000'0000];
//int a[1000'0000] {1};
//이 두경우에 실행파일의 크기는 매우 다르다. 왜그런지 알아보자

int main()
{
	//정수 10000000개를 정렬해보자
	int* a;

	std::cout << "원하는만큼 정수를 동적할당하여 정렬후 앞에서 100개를 출력" << std::endl;
	std::cout << "1000 이상의 정수를 입력하세요:";
	int num;
	std::cin >> num;
	a = new int[num];

	std::cout << std::endl;

	std::uniform_int_distribution<> uid(0,100000);
	std::default_random_engine dre;

	for (int i=0;i<num;++i)
		a[i]= uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << a[i] << " ";

	std::cout << std::endl << std::endl;

	std::sort(a, a + num);

	for (int i=0;i<100;++i)
		std::cout << a[i] << " ";

	save("소스.cpp");
}
=========================
 Tue Mar 12 13:59:39 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
// -정렬하여 파일에 기록한다
//   ? 정수 만 개를 기록하려면 몇 바이트가 필요하지? (40000바이트)
//   ? 파일은 2가지 모드(txt, binary)로 열 수 있다, 공부해보자
// 
// -binary I/O
// -smart_pointer
//------------------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <algorithm>
#include <fstream>
#include "save.h"

int main()
{
	//정수 만개를 랜덤하게 생성하여 정렬 후 파일에 기록하라

	int* a = new int[1'0000];

	std::uniform_int_distribution<> uid;
	std::default_random_engine dre;

	for (int i = 0; i < 10000; ++i)
		a[i] = uid(dre);

	std::sort(a, a + 10000);

	//정렬된 a를 파일 정수 만개 정렬.txt 에 써봐라
	std::ofstream out("정수 만개 정렬.txt", std::ios::binary);

	//공간을 낭비하지 않고 저장한다면 10000개 * sizeof(int)바이트가 필요하다
	//연속된 공간을 한 번에 저장하는 명령을 사용한다.
	out.write((char*)a, 10000 * sizeof(int));


	save("소스.cpp");
}
=========================
 Tue Mar 12 14:53:40 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
// -정렬하여 파일에 기록한다
//   ? 정수 만 개를 기록하려면 몇 바이트가 필요하지? (40000바이트)
//   ? 파일은 2가지 모드(txt, binary)로 열 수 있다, 공부해보자
// 
// -binary I/O
// -smart_pointer
//------------------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <algorithm>
#include <fstream>
#include <iomanip>
#include "save.h"

int main()
{
	// 파일에는 정수 10000개가 binary mode로 저장되어 있다
	//"정수 만개 정렬.txt"를 읽어 화면에 출력해라
	std::ifstream in("정수 만개 정렬.txt", std::ios::binary);
	int* a = new int[10000];

	in.read((char*)a, 10000 * sizeof(int));

	std::cout << std::setw(12) << a[0];
	for (int i = 1; i < 10000; ++i)
	{
		std::cout << std::setw(12) << a[i];
		if (i % 6 == 0)
			std::cout << std::endl;
	}


	save("소스.cpp");
}
=========================
 Tue Mar 12 15:07:16 2019
=========================


//------------------------------------------------------------------------------------
//2019 3/12 stl 금23														(화금 2주 1일)
//
// -smart_pointer
//------------------------------------------------------------------------------------
#include <iostream>
#include <random>
#include <algorithm>
#include <fstream>
#include <iomanip>
#include "save.h"

int main()
{
	// 파일에는 정수 10000개가 binary mode로 저장되어 있다
	//"정수 만개 정렬.txt"를 읽어 화면에 출력해라
	std::ifstream in("정수 만개 정렬.txt", std::ios::binary);
	int* a = new int[10000];

	in.read((char*)a, 10000 * sizeof(int));

	std::cout << std::setw(12) << a[0];
	for (int i = 1; i < 10000; ++i)
	{
		std::cout << std::setw(12) << a[i];
		if (i % 6 == 0)
			std::cout << std::endl;
	}

	delete[] a;
	save("소스.cpp");
}
=========================
 Tue Mar 12 15:09:06 2019
=========================


